// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Model;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220920081230_data-add-check")]
    partial class dataaddcheck
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Model.CityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rmz")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityName = "bengaluru",
                            Rmz = "ABC"
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.DataModel.BuildingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilityIdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityIdId");

                    b.ToTable("Building");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildName = "RMZ Corp",
                            FacilityIdId = 1
                        },
                        new
                        {
                            Id = 2,
                            BuildName = "RMZNext",
                            FacilityIdId = 2
                        },
                        new
                        {
                            Id = 3,
                            BuildName = "RMZ Corp 2",
                            FacilityIdId = 1
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.DataModel.ElectricMeterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ElectricMeter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 100,
                            Date = new DateTime(2022, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cost = 200,
                            Date = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 3,
                            Cost = 300,
                            Date = new DateTime(2022, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 7,
                            Cost = 100,
                            Date = new DateTime(2022, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneId = 2
                        },
                        new
                        {
                            Id = 8,
                            Cost = 800,
                            Date = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneId = 10
                        },
                        new
                        {
                            Id = 9,
                            Cost = 900,
                            Date = new DateTime(2022, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneId = 11
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.DataModel.FloorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuildingId")
                        .HasColumnType("int");

                    b.Property<int?>("FacilityIdId")
                        .HasColumnType("int");

                    b.Property<string>("FloorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("FacilityIdId");

                    b.ToTable("Floor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FacilityIdId = 1,
                            FloorName = "First Floor"
                        },
                        new
                        {
                            Id = 6,
                            FacilityIdId = 1,
                            FloorName = "First Floor"
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.DataModel.WaterMeterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WaterMeter");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Cost = 100,
                            Date = new DateTime(2022, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 5,
                            Cost = 200,
                            Date = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 6,
                            Cost = 300,
                            Date = new DateTime(2022, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneId = 1
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.DataModel.ZoneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Zone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingId = 1,
                            FacilityId = 1,
                            FloorId = 1,
                            ZoneName = "#1",
                            cityId = 1
                        },
                        new
                        {
                            Id = 2,
                            BuildingId = 1,
                            FacilityId = 1,
                            FloorId = 1,
                            ZoneName = "#2",
                            cityId = 1
                        },
                        new
                        {
                            Id = 3,
                            BuildingId = 1,
                            FacilityId = 1,
                            FloorId = 1,
                            ZoneName = "#3",
                            cityId = 1
                        },
                        new
                        {
                            Id = 10,
                            BuildingId = 3,
                            FacilityId = 1,
                            FloorId = 1,
                            ZoneName = "#11",
                            cityId = 1
                        },
                        new
                        {
                            Id = 11,
                            BuildingId = 3,
                            FacilityId = 1,
                            FloorId = 1,
                            ZoneName = "#12",
                            cityId = 1
                        },
                        new
                        {
                            Id = 13,
                            BuildingId = 3,
                            FacilityId = 1,
                            FloorId = 1,
                            ZoneName = "#13",
                            cityId = 1
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.FacilityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityIdId")
                        .HasColumnType("int");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityIdId");

                    b.ToTable("Facility");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityIdId = 1,
                            FacilityName = "RMZ"
                        },
                        new
                        {
                            Id = 2,
                            CityIdId = 1,
                            FacilityName = "RMZMG"
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.DataModel.BuildingModel", b =>
                {
                    b.HasOne("WebApplication1.Model.FacilityModel", "FacilityId")
                        .WithMany("Building")
                        .HasForeignKey("FacilityIdId");

                    b.Navigation("FacilityId");
                });

            modelBuilder.Entity("WebApplication1.Model.DataModel.FloorModel", b =>
                {
                    b.HasOne("WebApplication1.Model.DataModel.BuildingModel", "Building")
                        .WithMany("Floor")
                        .HasForeignKey("BuildingId");

                    b.HasOne("WebApplication1.Model.FacilityModel", "FacilityId")
                        .WithMany("Floor")
                        .HasForeignKey("FacilityIdId");

                    b.Navigation("Building");

                    b.Navigation("FacilityId");
                });

            modelBuilder.Entity("WebApplication1.Model.FacilityModel", b =>
                {
                    b.HasOne("WebApplication1.Model.CityModel", "CityId")
                        .WithMany("Facilites")
                        .HasForeignKey("CityIdId");

                    b.Navigation("CityId");
                });

            modelBuilder.Entity("WebApplication1.Model.CityModel", b =>
                {
                    b.Navigation("Facilites");
                });

            modelBuilder.Entity("WebApplication1.Model.DataModel.BuildingModel", b =>
                {
                    b.Navigation("Floor");
                });

            modelBuilder.Entity("WebApplication1.Model.FacilityModel", b =>
                {
                    b.Navigation("Building");

                    b.Navigation("Floor");
                });
#pragma warning restore 612, 618
        }
    }
}
